package com.docsbymario.controller.provider;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;

import org.osgi.service.component.annotations.Reference;

import com.docsbymario.cache.Cache;
import com.docsbymario.controller.Controller;
import com.docsbymario.data.request.Request;
import com.docsbymario.data.response.Response;
import com.docsbymario.repository.Repository;

public class StudentController implements Controller {
	@Reference
	private Cache cache;
	@Reference
	private Repository repository;
	
	private Map<String, Function<Request, Response>> endpoints = new HashMap<>();
	
	{
		endpoints.put("/getStudent", this::getStudent);
	}

	@Override
	public boolean canReceive(Request request) {
		return endpoints.get(request.getEndpoint()) != null;
	}

	@Override
	public Response processEndpoint(Request request) {
		Function<Request, Response> controllerFunction = endpoints.get(request.getEndpoint());
		
		if (controllerFunction != null) {
			return endpoints.get(request.getEndpoint()).apply(request);
		}
		else {
			Response response = new Response();
			response.setStatusCode(404);
			return response;
		}
	}
	
	public Response getStudent(Request request) {
		Response response = new Response();
		String id = request.getBody().getContent();
		
		if (cache.getData(id) != null) {
			String data = repository.getById(id);
			cache.putData(id, data);
			
			if (data == null) {
				response.setStatusCode(404);
				return response;
			}
			else {
				response.setStatusCode(200);
			}
		}
	}
	
	private String getDataFromRepository(String id) {
		return repository.getById(id);
	}

}
